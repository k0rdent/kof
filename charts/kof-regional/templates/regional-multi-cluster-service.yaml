{{- $global := .Values.global | default dict }}
{{- $globalValues := dict }}
{{- $customRegistry := "" }}
{{- if $global.registry }}
  {{- $globalValues = printf `
global:
  registry: $R
  imageRegistry: $R
  image:
    registry: $R
  hub: $R/istio
grafana-operator:
  image:
    repository: $R/grafana/grafana-operator
external-dns:
  image:
    repository: $R/external-dns/external-dns
jaeger-operator:
  image:
    repository: $R/jaegertracing/jaeger-operator
opencost:
  opencost:
    exporter:
      image:
        registry: $R
    ui:
      image:
        registry: $R
opentelemetry-operator:
  manager:
    image:
      repository: $R/opentelemetry-operator/opentelemetry-operator
    collectorImage:
      repository: $R/otel/opentelemetry-collector-contrib
  kubeRBACProxy:
    image:
      repository: $R/brancz/kube-rbac-proxy
opentelemetry-kube-stack:
  defaultCRConfig:
    image:
      repository: $R/opentelemetry-collector-contrib
  cleanupJob:
    image:
      repository: $R/bitnami/kubectl

` | replace "$R" $global.registry | fromYaml }}
  {{- if ne $global.registry "docker.io" }}
    {{- $customRegistry = $global.registry }}
  {{- end }}
{{- end -}}
apiVersion: k0rdent.mirantis.com/v1beta1
kind: MultiClusterService
metadata:
  name: kof-regional-cluster
spec:
  clusterSelector:
    matchLabels:
      k0rdent.mirantis.com/kof-cluster-role: regional
    matchExpressions:
      - key: "k0rdent.mirantis.com/istio-role"
        operator: DoesNotExist

  serviceSpec:
    services:
      {{- $version := .Chart.Version | replace "." "-" }}
      {{- if (index .Values "cert-manager" "enabled") }}
      - name: cert-manager
        namespace: {{ .Release.Namespace }}
        template: {{ index .Values "cert-manager" "template" }}
        values: |
          crds:
            enabled: true
        {{- with $customRegistry }}
          image:
            repository: {{ . }}/jetstack/cert-manager-controller
          acmesolver:
            image:
              repository: {{ . }}/jetstack/cert-manager-acmesolver
          cainjector:
            image:
              repository: {{ . }}/jetstack/cert-manager-cainjector
          startupapicheck:
            image:
              repository: {{ . }}/jetstack/cert-manager-startupapicheck
          webhook:
            image:
              repository: {{ . }}/jetstack/cert-manager-webhook
        {{- end }}
      {{- end }}

      {{- if (index .Values "ingress-nginx" "enabled") }}
      - name: ingress-nginx
        namespace: {{ .Release.Namespace }}
        template: {{ index .Values "ingress-nginx" "template" }}
        values: |
          {{`{{`}} $ingressNginxValuesFromAnnotation := index .Cluster.metadata.annotations "k0rdent.mirantis.com/kof-ingress-nginx-values" | default "{}" | fromYaml {{`}}`}}
          {{`{{`}} $ingressNginxValuesFromHelm := `{{ index .Values "ingress-nginx" | toYaml | nindent 10 }}` | fromYaml {{`}}`}}
          {{`{{`}} $ingressNginxValuesHere := `
          controller:
            image:
              digest: ""
            admissionWebhooks:
              patch:
                image:
                  digest: ""
          ` | fromYaml {{`}}`}}
          {{`{{`}} if eq (get .InfrastructureProvider "kind") "AzureCluster" {{`}}`}}
          {{`{{`}} $ingressNginxValuesAzure = `
          controller:
            service:
              annotations:
                service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: /healthz
          ` | fromYaml {{`}}`}}
          {{`{{`}} $ingressNginxValuesHere = mergeOverwrite $ingressNginxValuesHere $ingressNginxValuesAzure {{`}}`}}
          {{`{{ end }}`}}
          {{`{{`}} $globalValuesFromHelm := `{{ $globalValues | toYaml | nindent 10 }}` | fromYaml {{`}}`}}
          {{`{{`}} mergeOverwrite (dict) $globalValuesFromHelm $ingressNginxValuesHere $ingressNginxValuesFromHelm $ingressNginxValuesFromAnnotation | toYaml | nindent 4 {{`}}`}}
      {{- end }}

      - name: kof-operators
        namespace: {{ .Release.Namespace }}
        template: kof-operators-{{ $version }}
        templateChain: kof-operators-{{ $version }}
        values: |
          {{`{{ $operatorsValuesFromAnnotation := index .Cluster.metadata.annotations "k0rdent.mirantis.com/kof-operators-values" | default "{}" | fromYaml }}`}}
          {{`{{`}} $operatorsValuesFromHelm := `{{ .Values.operators | toYaml | nindent 10 }}` | fromYaml {{`}}`}}
          {{`{{`}} $operatorsValuesHere := `
          victoria-metrics-operator:
            operator:
              disable_prometheus_converter: false
          ` | fromYaml {{`}}`}}
          {{`{{`}} $globalValuesFromHelm := `{{ $globalValues | toYaml | nindent 10 }}` | fromYaml {{`}}`}}
          {{`{{ mergeOverwrite (dict) $globalValuesFromHelm $operatorsValuesHere $operatorsValuesFromHelm $operatorsValuesFromAnnotation | toYaml | nindent 4 }}`}}

      - name: kof-storage
        namespace: {{ .Release.Namespace }}
        template: kof-storage-{{ $version }}
        templateChain: kof-storage-{{ $version }}
        values: |
          {{`{{ $storageClass := index .Cluster.metadata.annotations "k0rdent.mirantis.com/kof-storage-class" | default "" }}`}}
          {{`{{ $regionalDomain := index .Cluster.metadata.annotations "k0rdent.mirantis.com/kof-regional-domain" }}`}}
          {{`{{ $tracesEnabled := not (index .Cluster.metadata.annotations "k0rdent.mirantis.com/kof-write-traces-endpoint") }}`}}
          {{`{{ $tracesHost := $tracesEnabled | ternary (printf "jaeger.%s" $regionalDomain) "" }}`}}
          {{`{{ $metricsEnabled := not (index .Cluster.metadata.annotations "k0rdent.mirantis.com/kof-write-metrics-endpoint") }}`}}
          {{`{{ $metricsHost := $metricsEnabled | ternary (printf "vmauth.%s" $regionalDomain) "" }}`}}
          {{`{{ $grafanaHost := printf "grafana.%s" $regionalDomain }}`}}
          {{`{{ $certEmail := index .Cluster.metadata.annotations "k0rdent.mirantis.com/kof-cert-email" }}`}}
          {{`{{ $dexIssuer := printf "https://dex.%s" $regionalDomain }}`}}
          {{`{{ $dexHost := printf "dex.%s" $regionalDomain }}`}}
          {{`{{ $storageValuesFromAnnotation := index .Cluster.metadata.annotations "k0rdent.mirantis.com/kof-storage-values" | default "{}" | fromYaml }}`}}
          {{`{{`}} $storageValuesFromHelm := `{{ .Values.storage | toYaml | nindent 10 }}` | fromYaml {{`}}`}}
          {{`{{`}} $storageValuesHere := printf `
          global:
            storageClass: %q
            clusterName: %q
          victoria-logs-cluster:
            vlstorage:
              persistentVolume:
                storageClassName: %q
          external-dns:
            enabled: true
          jaeger:
            ingress:
              enabled: %t
              host: %q
          victoriametrics:
            vmauth:
              spec:
                ingress:
                  tlsHosts:
                    - %q
          grafana:
            ingress:
              host: %q
          cert-manager:
            email: %q
          dex:
            config:
              issuer: %q
            customIngress:
              host: %q
          ` $storageClass .Cluster.metadata.name $storageClass $tracesEnabled $tracesHost $metricsHost $grafanaHost $certEmail $dexIssuer $dexHost | fromYaml {{`}}`}}
          {{`{{`}} $globalValuesFromHelm := `{{ $globalValues | toYaml | nindent 10 }}` | fromYaml {{`}}`}}
          {{`{{ mergeOverwrite (dict) $globalValuesFromHelm $storageValuesHere $storageValuesFromHelm $storageValuesFromAnnotation | toYaml | nindent 4 }}`}}
          resourcesRefsVersions:
            StorageVMUserCredentials: "{{`{{ getField "StorageVMUserCredentials" "metadata.resourceVersion" }}` }}"
        valuesFrom:
          - kind: ConfigMap
            namespace: "{{`{{ .Cluster.metadata.namespace }}`}}"
            name: kof-record-vmrules-{{`{{ .Cluster.metadata.name }}`}}

      - name: kof-collectors
        namespace: {{ .Release.Namespace }}
        template: kof-collectors-{{ $version }}
        templateChain: kof-collectors-{{ $version }}
        values: |
          {{`{{ $vmuserSecretVersion := getField "StorageVMUserCredentials" "metadata.resourceVersion" }}`}}
          {{`{{ $collectorsValuesFromAnnotation := index .Cluster.metadata.annotations "k0rdent.mirantis.com/kof-collectors-values" | default "{}" | fromYaml }}`}}
          {{`{{`}} $collectorsValuesFromHelm := `{{ .Values.collectors | toYaml | nindent 10 }}` | fromYaml {{`}}`}}
          {{`{{`}} $collectorsValuesHere := `
          global:
            clusterName: {regionalClusterName}
            clusterNamespace: {regionalClusterNamespace}
          opentelemetry-kube-stack:
            clusterName: {regionalClusterName}
            defaultCRConfig:
              podAnnotations:
                k0rdent.mirantis.com/kof-vmuser-secret-version: "{vmuserSecretVersion}"
              config:
                processors:
                  resource/k8sclustername:
                    attributes:
                    - action: insert
                      key: k8s.cluster.name
                      value: {regionalClusterName}
                    - action: insert
                      key: k8s.cluster.namespace
                      value: {regionalClusterNamespace}
                exporters:
                  debug: {}
                  otlphttp/traces:
                    endpoint: http://kof-storage-jaeger-collector.kof:4318
                    tls:
                      insecure: true
                  otlphttp/logs:
                    logs_endpoint: http://kof-storage-victoria-logs-cluster-vlinsert.kof:9481/insert/opentelemetry/v1/logs
                    tls:
                      insecure: true
                  prometheusremotewrite:
                    external_labels:
                      cluster: {regionalClusterName}
                      clusterNamespace: {regionalClusterNamespace}
                    tls:
                      insecure: true
                    endpoint: http://vminsert-cluster.kof:8480/insert/0/prometheus/api/v1/write
          opencost:
            opencost:
              exporter:
                defaultClusterId: {regionalClusterName}
          ` | replace "{regionalClusterName}" .Cluster.metadata.name | replace "{regionalClusterNamespace}" .Cluster.metadata.namespace | replace "{vmuserSecretVersion}" $vmuserSecretVersion | fromYaml {{`}}`}}
          {{`{{`}} $globalValuesFromHelm := `{{ $globalValues | toYaml | nindent 10 }}` | fromYaml {{`}}`}}
          {{`{{ mergeOverwrite (dict) $globalValuesFromHelm $collectorsValuesHere $collectorsValuesFromHelm $collectorsValuesFromAnnotation | toYaml | nindent 4 }}`}}
    templateResourceRefs:
    - identifier: RegionalKCMCluster
      optional: true
      resource:
        apiVersion: cluster.x-k8s.io/v1beta1
        kind: Cluster
        name: "{{`{{ .Cluster.metadata.name }}`}}"
        namespace: "{{`{{ .Cluster.metadata.namespace }}`}}"
    - identifier: RegionalSveltosCluster
      optional: true
      resource:
        apiVersion: lib.projectsveltos.io/v1beta1
        kind: SveltosCluster
        name: "{{`{{ .Cluster.metadata.name }}`}}"
        namespace: "{{`{{ .Cluster.metadata.namespace }}`}}"
    - identifier: StorageVMUserCredentials
      optional: true
      resource:
        apiVersion: v1
        kind: Secret
        name: storage-vmuser-credentials
        namespace: {{ $.Release.Namespace }}
