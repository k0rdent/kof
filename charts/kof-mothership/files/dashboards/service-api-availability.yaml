{{- $Values := (.helm).Values | default .Values }}
annotations:
  list:
    - builtIn: 1
      datasource:
        type: datasource
        uid: grafana
      enable: true
      hide: true
      iconColor: rgba(0, 211, 255, 1)
      name: Annotations & Alerts
      target:
        limit: 100
        matchAny: false
        tags: []
        type: dashboard
      type: dashboard
description: Availability for kubernetes api
editable: true
fiscalYearStartMonth: 0
gnetId: 15761
graphTooltip: 1
id: 53
links: []
liveNow: false
panels:
  - collapsed: false
    gridPos:
      h: 1
      w: 24
      x: 0
      "y": 0
    id: 39
    panels: []
    title: Endpoint
    type: row
  - datasource:
      type: prometheus
      uid: "${datasource}"
    description: Endpoint is considered not working if all samples over 5 minute window are not successful
    fieldConfig:
      defaults:
        color:
          mode: thresholds
        custom:
          fillOpacity: 70
          hideFrom:
            legend: false
            tooltip: false
            viz: false
          lineWidth: 1
        mappings:
          - options:
              "0":
                color: red
                index: 1
                text: Down
              "1":
                color: green
                index: 0
                text: Up
            type: value
        thresholds:
          mode: absolute
          steps:
            - color: red
              value: null
        unit: none
      overrides: []
    gridPos:
      h: 13
      w: 24
      x: 0
      "y": 1
    id: 38
    options:
      colWidth: 0.9
      legend:
        displayMode: list
        placement: bottom
        showLegend: true
      rowHeight: 0.9
      showValue: auto
      tooltip:
        mode: single
        sort: none
    pluginVersion: 8.3.3
    targets:
      - datasource:
          type: prometheus
          uid: "${datasource}"
        editorMode: code
        exemplar: true
        expr: max_over_time(max(probe_success{cluster=~"$cluster",service=~"$service"}) by (cluster, service) [5m:1m])
        hide: false
        interval: 1m
        legendFormat: {{` '{{ cluster }} - {{ service }}' `}}
        range: true
        refId: D
    title: Endpoint Status
    type: status-history
  - datasource:
      type: prometheus
      uid: "${datasource}"
    description: Calculates hourly availability of endpoint. Endpoint is considered not working if all samples over 5 minute window are not successful. Returns value calculated at the end of the hour
    fieldConfig:
      defaults:
        color:
          mode: thresholds
        custom:
          fillOpacity: 70
          hideFrom:
            legend: false
            tooltip: false
            viz: false
          lineWidth: 1
        mappings: []
        thresholds:
          mode: absolute
          steps:
            - color: red
              value: null
            - color: '#EAB839'
              value: 99.5
            - color: green
              value: 99.9
        unit: percent
      overrides: []
    gridPos:
      h: 13
      w: 24
      x: 0
      "y": 14
    id: 42
    options:
      colWidth: 0.9
      legend:
        displayMode: list
        placement: bottom
        showLegend: true
      rowHeight: 0.9
      showValue: auto
      tooltip:
        mode: single
        sort: none
    pluginVersion: 8.3.3
    targets:
      - datasource:
          type: prometheus
          uid: "${datasource}" 
        editorMode: code
        exemplar: true
        expr: avg_over_time(max_over_time(max(probe_success{cluster=~"$cluster",service=~"$service"}) by (cluster,service)[5m:1m])[1h:5m])*100
        interval: 1h
        legendFormat: {{` '{{ cluster }} - {{ service }}' `}}
        range: true
        refId: A
    title: Hourly availability
    type: status-history
  - datasource:
      type: prometheus
      uid: 087ae0b1-4143-4091-9634-d7f9ba9f1d38
    description: Calculates daily availability of endpoint. Endpoint is considered not working if all samples over 5 minute window are not successful. Returns value calculated at the end of the day
    fieldConfig:
      defaults:
        color:
          mode: thresholds
        custom:
          fillOpacity: 70
          hideFrom:
            legend: false
            tooltip: false
            viz: false
          lineWidth: 1
        mappings: []
        thresholds:
          mode: absolute
          steps:
            - color: red
              value: null
            - color: '#EAB839'
              value: 99.5
            - color: green
              value: 99.9
        unit: percent
      overrides: []
    gridPos:
      h: 13
      w: 24
      x: 0
      "y": 27
    id: 43
    options:
      colWidth: 0.9
      legend:
        displayMode: list
        placement: bottom
        showLegend: true
      rowHeight: 0.9
      showValue: auto
      tooltip:
        mode: single
        sort: none
    pluginVersion: 8.3.3
    targets:
      - datasource:
          type: prometheus
          uid: "${datasource}"
        editorMode: code
        exemplar: true
        expr: avg_over_time(max_over_time(max(probe_success{cluster=~"$cluster",service=~"$service"}) by (cluster,service) [5m:1m])[1d:5m])*100
        interval: 1d
        legendFormat: {{` '{{cluster}} - {{service}} availability' `}}
        range: true
        refId: A
    title: Daily availability
    type: status-history
  - datasource:
      type: prometheus
      uid: "${datasource}"
    description: Calculates monthly availability of endpoint. Endpoint is considered not working if all samples over 5 minute window are not successful. Returns value calculated at the end of the month
    fieldConfig:
      defaults:
        color:
          mode: thresholds
        custom:
          fillOpacity: 70
          hideFrom:
            legend: false
            tooltip: false
            viz: false
          lineWidth: 1
        mappings: []
        thresholds:
          mode: absolute
          steps:
            - color: red
              value: null
            - color: '#EAB839'
              value: 99.5
            - color: green
              value: 99.9
        unit: percent
      overrides: []
    gridPos:
      h: 13
      w: 24
      x: 0
      "y": 40
    id: 44
    maxDataPoints: -1
    options:
      colWidth: 0.9
      legend:
        displayMode: list
        placement: bottom
        showLegend: true
      rowHeight: 0.9
      showValue: auto
      tooltip:
        mode: single
        sort: none
    pluginVersion: 8.3.3
    targets:
      - datasource:
          type: prometheus
          uid: "${datasource}"
        editorMode: code
        exemplar: true
        expr: avg_over_time(max_over_time(max(probe_success{cluster=~"$cluster",service=~"$service"}) by (cluster,service)[5m:1m])[30d:5m])*100
        interval: 30d
        legendFormat: {{` '{{cluster}} - {{service}} availability' `}}
        range: true
        refId: A
    title: Monthly availability
    type: status-history
refresh: 30s
schemaVersion: 39
tags: []
templating:
  list:
    - current:
        selected: false
        text: prometheus
      hide: 0
      includeAll: false
      multi: false
      name: datasource
      options: []
      query: prometheus
      refresh: 1
      regex: /promxy/
      skipUrlSync: false
      type: datasource
    - current:
        selected: true
        text:
          - All
        value:
          - ""
      datasource:
        type: prometheus
        uid: "${datasource}" 
      definition: label_values(kube_node_info,{{$Values.global.clusterLabel}})
      hide: 0
      includeAll: true
      multi: true
      name: cluster
      options: []
      query:
        qryType: 1
        query: label_values(kube_node_info,cluster)
        refId: PrometheusVariableQueryEditor-VariableQuery
      refresh: 1
      regex: ""
      skipUrlSync: false
      sort: 1
      type: query
    - current:
        selected: true
        text:
          - All
        value:
          - ""
      datasource:
        type: prometheus
        uid: "${datasource}" 
      definition: label_values(probe_success{cluster=~"$cluster"},service)
      hide: 0
      includeAll: true
      label: service
      multi: true
      name: service
      options: []
      query:
        qryType: 1
        query: label_values(probe_success{cluster=~""},service)
        refId: PrometheusVariableQueryEditor-VariableQuery
      refresh: 1
      regex: ""
      skipUrlSync: false
      sort: 0
      type: query
time:
  from: now-3h
  to: now
timepicker: {}
timezone: ""
title: Service API Availability
uid: den4orrtta39ca
version: 20
weekStart: ""
