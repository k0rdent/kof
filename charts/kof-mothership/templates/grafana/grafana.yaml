{{- if index .Values "grafana" "enabled" | default false }}
{{- $global := .Values.global | default dict }}
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana-vm
  labels:
    dashboards: grafana
    namespace: {{ .Release.Namespace }}
spec:
  {{- if or (.Values.grafana.version | regexMatch "[:/@]") (not $global.registry) }}
  version: {{ .Values.grafana.version }}
  {{- else }}
  version: {{ $global.registry }}/grafana/grafana:{{ .Values.grafana.version }}
  {{- end }}
  {{- if .Values.dex.enabled }}
  config:
    auth.generic_oauth:
      enabled: "true"
      name: Dex
      scopes: "openid email profile groups offline_access"
      auth_url: {{ .Values.dex.config.issuer }}/auth
      token_url: {{ .Values.dex.config.issuer }}/token
      api_url: {{ .Values.dex.config.issuer }}/userinfo
      client_id: grafana-id
      client_secret: grafana-secret
      tls_skip_verify_insecure: "true"
  {{- end }}
  disableDefaultAdminSecret: true
  persistentVolumeClaim:
    spec:
      accessModes:
        - ReadWriteOnce
      resources: {{ .Values.grafana.pvc.resources | toYaml | nindent 8 }}
      {{- with .Values.global.storageClass }}
      storageClassName: {{ . }}
      {{- end }}
  deployment:
    spec:
      template:
        spec:
          securityContext:
            fsGroup: 472
          volumes:
            - name: grafana-data
              persistentVolumeClaim:
                claimName: grafana-vm-pvc
          containers:
            - name: grafana
              env:
                - name: GF_SECURITY_ADMIN_USER
                  valueFrom:
                    secretKeyRef:
                      key: GF_SECURITY_ADMIN_USER
                      name: {{ .Values.grafana.security.credentials_secret_name }}
                - name: GF_SECURITY_ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: GF_SECURITY_ADMIN_PASSWORD
                      name: {{ .Values.grafana.security.credentials_secret_name }}
                - name: GF_INSTALL_PLUGINS
                  value: "victoriametrics-logs-datasource 0.21.0,victoriametrics-metrics-datasource 0.19.4"
                  # https://grafana.com/api/plugins/victoriametrics-logs-datasource
                  # https://grafana.com/api/plugins/victoriametrics-metrics-datasource

  {{- if .Values.grafana.ingress.enabled }}
  ingress:
    metadata:
      annotations:
        cert-manager.io/cluster-issuer: {{ include "cert-manager.cluster-issuer.name" $ }}
        {{- include "cert-manager.acme-annotation" $ | nindent 8 }}
    spec:
      ingressClassName: nginx
      rules:
        - host: {{ .Values.grafana.ingress.host | quote }}
          http:
            paths:
              - backend:
                  service:
                    name: grafana-vm-service
                    port:
                      number: 3000
                path: /
                pathType: Prefix
      tls:
        - hosts:
            - {{ .Values.grafana.ingress.host | quote }}
          secretName: grafana-cluster-tls
  {{- end }}
{{- end }}
